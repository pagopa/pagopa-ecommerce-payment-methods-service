version: "3.9"

services:
  pagopa-ecommerce-payment-methods-service:
    build:
      context: .
    container_name: pagopa-ecommerce-payment-methods-service
    ports:
      - "8080:8080"
    networks:
      - pagopa-ecommerce
    env_file: .env

  mongo:
    container_name: pagopa-ecommerce-mongo
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_USERNAME
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_PASSWORD
    networks:
      - pagopa-ecommerce
    healthcheck:
      test: echo "db.stats().ok" | mongo --quiet
      interval: 10s

  mongo-express:
    image: mongo-express
    ports:
      - "8081:8081"
    networks:
      - pagopa-ecommerce
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: $MONGO_USERNAME
      ME_CONFIG_MONGODB_ADMINPASSWORD: $MONGO_PASSWORD
      ME_CONFIG_MONGODB_URL: mongodb://$MONGO_USERNAME:$MONGO_PASSWORD@pagopa-ecommerce-mongo:27017/
    depends_on:
      mongo:
        condition: service_healthy

  pagopa-gec-mock:
    build:
      context: .
      dockerfile: gec-mock/Dockerfile.gec-mock
    container_name: pagopa-GEC-mock
    volumes:
      - type: bind
        source: ./gec-mock
        target: /config
        read_only: true
    ports:
      - "8085:3000"
    networks:
      - pagopa-ecommerce
  
  pagopa-gec-mock:
    build:
      context: .
      dockerfile: gec-mock/Dockerfile.gec-mock
    container_name: pagopa-GEC-mock
    volumes:
      - type: bind
        source: ./gec-mock
        target: /config
        read_only: true
    ports:
      - "8085:3000"
    networks:
      - pagopa-ecommerce

networks:
  pagopa-ecommerce:
    name: pagopa-ecommerce
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450