variables:
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
  BRANCH_NAME: $[ replace(variables['System.PullRequest.SourceBranch'], 'refs/heads/', '') ]

trigger: none

pool:
  vmImage: ubuntu-latest

resources:
  repositories:
    - repository: pagopaEcommerceLocal
      type: github
      name: pagopa/pagopa-ecommerce-local
      ref: main
      endpoint: 'io-azure-devops-github-ro'

stages:
  - stage: BuildEndUnitTest
    jobs:
      - job: make_buildEndUnitTest
        steps:
          - task: Cache@2
            inputs:
              key: 'maven | "$(Agent.OS)" | pom.xml'
              restoreKeys: |
                maven | "$(Agent.OS)"
                maven
              path: $(MAVEN_CACHE_FOLDER)
            displayName: Cache Maven local repo

          - task: SonarCloudPrepare@3
            displayName: 'Prepare SonarCloud analysis configuration'
            inputs:
              SonarCloud: '$(SONARCLOUD_SERVICE_CONN)'
              organization: '$(SONARCLOUD_ORG)'
              scannerMode: Other
              extraProperties: |
                sonar.projectKey=$(SONARCLOUD_PROJECT_KEY)
                sonar.projectName=$(SONARCLOUD_PROJECT_NAME)
                sonar.coverage.exclusions=**/config/*,**/*Mock*,**/model/*
                sonar.coverage.jacoco.xmlReportPaths=./report/target/site/jacoco/jacoco.xml
                sonar.junit.reportPaths=target/surefire-reports/

          - task: Maven@4
            inputs:
              mavenPomFile: 'pom.xml'
              mavenOptions: '-Xmx3072m $(MAVEN_OPTS)'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '17'
              jdkArchitectureOption: 'x64'
              publishJUnitResults: false
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              goals: 'clean validate'
              sonarQubeRunAnalysis: false

          - task: Maven@4
            inputs:
              mavenPomFile: 'pom.xml'
              mavenOptions: '-Xmx3072m $(MAVEN_OPTS)'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '17'
              jdkArchitectureOption: 'x64'
              publishJUnitResults: false
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              goals: 'clean verify'
              sonarQubeRunAnalysis: true

          - task: SonarCloudPublish@3
            displayName: 'Publish SonarCloud results on build summary'
            inputs:
              pollingTimeoutSec: '300'

          - task: PublishCodeCoverageResults@2
            displayName: 'Publish Code Coverage on Azure Devops'
            inputs:
              codeCoverageTool: 'JaCoCo'
              summaryFileLocation: 'target/site/jacoco/jacoco.xml'
              reportDirectory: 'target/site/jacoco'

  - stage: IntegrationTest
    dependsOn: [ ]
    jobs:
      - job: make_integration_test
        steps:
          - checkout: pagopaEcommerceLocal
          - script: |
              echo "##[debug] Change placeholder for ecommerce-payment-method-service set branch: $(BRANCH_NAME)"
              sed -i "s/^ECOMMERCE_PAYMENT_METHODS_COMMIT_SHA=.*$/ECOMMERCE_PAYMENT_METHODS_COMMIT_SHA=$(BRANCH_NAME)/" .env
            displayName: 'Change payment-method branch name ecommerce-local .env'
          - script: docker compose up pagopa-ecommerce-payment-methods-service pagopa-gec-mock pagopa-npg-mock mongo redis -d
            displayName: 'Run app with docker-compose'
          - script: |
              timeout 180 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' localhost:8083/actuator/health/liveness)" != "200" ]]; do sleep 5; done' || exit 1
            displayName: 'Health check'
          - script: yarn global add newman
            displayName: 'newman installation'
          - script: newman run api-tests/payment-method-service/payment-method-service_ecommerce_local.postman_collection.json --environment=api-tests/payment-method-service/payment-method-service_ecommerce_local.postman_environment.json --reporters cli,junit --reporter-junit-export Results/checkout-api-TEST.xml
            displayName: 'Run api test'
            continueOnError: false
          - task: PublishTestResults@2
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: '**/*-TEST.xml'
              searchFolder: '$(System.DefaultWorkingDirectory)'
