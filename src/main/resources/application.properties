application.name=@project.artifactId@
build.version=@project.version@
spring.data.mongodb.uri=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@${MONGO_HOST}:${MONGO_PORT}/?ssl=${MONGO_SSL_ENABLED}&readPreference=primaryPreferred&maxStalenessSeconds=90&minPoolSize=${MONGO_MIN_POOL_SIZE}&maxPoolSize=${MONGO_MAX_POOL_SIZE}&maxIdleTimeMS=${MONGO_MAX_IDLE_TIMEOUT_MS}&connectTimeoutMS=${MONGO_CONNECTION_TIMEOUT_MS}&socketTimeoutMS=${MONGO_SOCKET_TIMEOUT_MS}&serverSelectionTimeoutMS=${MONGO_SERVER_SELECTION_TIMEOUT_MS}&waitQueueTimeoutMS=${MONGO_WAITING_QUEUE_MS}&heartbeatFrequencyMS=${MONGO_HEARTBEAT_FREQUENCY_MS}${MONGO_REPLICA_SET_OPTION:}
spring.data.mongodb.database=ecommerce
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.password=${REDIS_PASSWORD}
spring.data.redis.port=${REDIS_PORT}
spring.data.redis.ssl.enabled=${REDIS_SSL_ENABLED}
afm.uri=${AFM_URI}/apiconfig/checkout/api/v1/services
afm.uri.v2=${AFM_URI_V2}/apiconfig/checkout/api/v2/services
afm.client.key=${AFM_KEY}
afm.readTimeout=${AFM_READ_TIMEOUT}
afm.connectionTimeout=${AFM_CONNECTION_TIMEOUT}
afm.client.maxInMemory=${SPRING_MAX_IN_MEM_SIZE}
management.endpoint.health.probes.enabled=true
spring.jackson.default-property-inclusion=non_null
npg.uri=${NPG_URI}
npg.readTimeout=${NPG_READ_TIMEOUT}
npg.connectionTimeout=${NPG_CONNECTION_TIMEOUT}
npg.keepalive.enabled=${NPG_SO_KEEPALIVE}
npg.keepalive.idle=${NPG_TCP_KEEPIDLE}
npg.keepalive.intvl=${NPG_TCP_KEEPINTVL}
npg.keepalive.cnt=${NPG_TCP_KEEPCNT}
npg.client.apiKey=${NPG_API_KEY}
sessionUrl.basePath=${SESSION_URL_BASEPATH}
sessionUrl.outcomeSuffix=${SESSION_URL_OUTCOME_SUFFIX}
sessionUrl.cancelSuffix=${SESSION_URL_CANCEL_SUFFIX}
sessionUrl.notificationUrl=${SESSION_URL_NOTIFICATION_URL}
npg.sessionsTTL=${NPG_SESSIONS_TTL}
npg.notification.jwt.validity.time=${NPG_NOTIFICATION_JWT_VALIDITY_TIME}
warmup.payment.method.id=${WARMUP_PAYMENT_METHOD_ID}

server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=25s

logging.level.it.pagopa=${SERVICE_LOGGING_LEVEL:info}

jwtissuer.uri=${JWT_ISSUER_URI}
jwtissuer.readTimeout=${JWT_ISSUER_READ_TIMEOUT}
jwtissuer.connectionTimeout=${JWT_ISSUER_CONNECTION_TIMEOUT}
jwtissuer.apiKey=\${JWT_ISSUER_API_KEY}

#payment-methods API keys
security.apiKey.primary=${SECURITY_API_KEY_PRIMARY}
security.apiKey.secondary=${SECURITY_API_KEY_SECONDARY}
security.apiKey.securedPaths=${SECURITY_API_KEY_SECURED_PATHS}